/**
 * Angular wrapper for Bryntum CalendarDatePicker
 */
import { Component, EventEmitter, Output, Input } from '@angular/core';
import WrapperHelper from './wrapper.helper';
import { CalendarDatePicker, WidgetHelper } from '@bryntum/calendar';
import * as i0 from "@angular/core";
export class BryntumCalendarDatePickerComponent {
    constructor(element) {
        this.bryntumConfig = {
            adopt: undefined,
            appendTo: undefined,
            href: undefined,
            angularComponent: this,
            features: {},
            listeners: {}
        };
        // Events
        this.onBeforeDestroy = new EventEmitter();
        this.onBeforeHide = new EventEmitter();
        this.onBeforeRefresh = new EventEmitter();
        this.onBeforeSetRecord = new EventEmitter();
        this.onBeforeShow = new EventEmitter();
        this.onCatchAll = new EventEmitter();
        this.onDateChange = new EventEmitter();
        this.onDestroy = new EventEmitter();
        this.onFocusIn = new EventEmitter();
        this.onFocusOut = new EventEmitter();
        this.onHide = new EventEmitter();
        this.onPaint = new EventEmitter();
        this.onReadOnly = new EventEmitter();
        this.onRecompose = new EventEmitter();
        this.onRefresh = new EventEmitter();
        this.onResize = new EventEmitter();
        this.onSelectionChange = new EventEmitter();
        this.onShow = new EventEmitter();
        this.onToolClick = new EventEmitter();
        this.elementRef = element;
    }
    /**
     * Create and append the underlying widget
     */
    ngOnInit() {
        const me = this, { elementRef, bryntumConfig } = me, { instanceClass, instanceName, bryntumConfigs, bryntumEvents } = BryntumCalendarDatePickerComponent;
        bryntumConfigs.filter(prop => prop in this).forEach(prop => {
            // @ts-ignore
            WrapperHelper.applyPropValue(bryntumConfig, prop, this[prop]);
            if (['features', 'config'].includes(prop)) {
                WrapperHelper.devWarningConfigProp(instanceName, prop);
            }
        });
        // @ts-ignore
        bryntumEvents.filter(event => this[event] && this[event].observers.length > 0).forEach(event => {
            const uncapitalize = (str) => str.charAt(0).toLowerCase() + str.slice(1), eventName = (str) => uncapitalize(str.slice(2));
            // @ts-ignore
            bryntumConfig.listeners[eventName(event)] = e => {
                // @ts-ignore
                me[event].emit(e);
                // EventEmitter does not return values in the normal way, work around it by setting `returnValue` flag
                // in Angular listeners
                return e.returnValue;
            };
        });
        // If component has no container specified in config then use adopt to Wrapper's element
        const containerParam = [
            'adopt',
            'appendTo',
            'insertAfter',
            'insertBefore'
            // @ts-ignore
        ].find(prop => bryntumConfig[prop]);
        if (!containerParam) {
            if (instanceName === 'Button') {
                // Button should always be <a> or <button> inside owner element
                bryntumConfig.appendTo = elementRef.nativeElement;
            }
            else {
                bryntumConfig.adopt = elementRef.nativeElement;
            }
        }
        else {
            WrapperHelper.devWarningContainer(instanceName, containerParam);
        }
        // @ts-ignore
        me.instance = instanceName === 'Widget' ? WidgetHelper.createWidget(bryntumConfig) : new instanceClass(bryntumConfig);
    }
    /**
     * Watch for changes
     * @param changes
     */
    ngOnChanges(changes) {
        const { instance } = this, { instanceName } = BryntumCalendarDatePickerComponent;
        if (!instance) {
            return;
        }
        // Iterate over all changes
        Object.entries(changes).forEach(([prop, change]) => {
            const newValue = change.currentValue, { instance } = this, { bryntumConfigsOnly, bryntumProps } = BryntumCalendarDatePickerComponent;
            if (bryntumProps.includes(prop)) {
                WrapperHelper.applyPropValue(instance, prop, newValue, false);
                if (bryntumConfigsOnly.includes(prop)) {
                    WrapperHelper.devWarningUpdateProp(instanceName, prop);
                }
            }
        });
    }
    /**
     * Destroy the component
     */
    ngOnDestroy() {
        // @ts-ignore
        this.instance && this.instance.destroy && this.instance.destroy();
    }
}
BryntumCalendarDatePickerComponent.instanceClass = CalendarDatePicker;
BryntumCalendarDatePickerComponent.instanceName = 'CalendarDatePicker';
BryntumCalendarDatePickerComponent.bryntumEvents = [
    'onBeforeDestroy',
    'onBeforeHide',
    'onBeforeRefresh',
    'onBeforeSetRecord',
    'onBeforeShow',
    'onCatchAll',
    'onDateChange',
    'onDestroy',
    'onFocusIn',
    'onFocusOut',
    'onHide',
    'onPaint',
    'onRecompose',
    'onRefresh',
    'onResize',
    'onSelectionChange',
    'onShow',
    'onToolClick'
];
BryntumCalendarDatePickerComponent.bryntumFeatureNames = [];
BryntumCalendarDatePickerComponent.bryntumConfigs = BryntumCalendarDatePickerComponent.bryntumFeatureNames.concat([
    'activeDate',
    'adopt',
    'align',
    'alignSelf',
    'anchor',
    'animateTimeShift',
    'appendTo',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'bubbleEvents',
    'callOnFunctions',
    'cellRenderer',
    'centered',
    'cls',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'content',
    'contentElementCls',
    'dataset',
    'date',
    'dayNameFormat',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'disabled',
    'disabledDates',
    'disableOtherMonthCells',
    'disableWeekends',
    'dock',
    'draggable',
    'editMonth',
    'eventCountTip',
    'eventFilter',
    'eventRenderer',
    'eventStore',
    'extraData',
    'filterEventResources',
    'flex',
    'floating',
    'focusDisabledDates',
    'footer',
    'getPrimaryResource',
    'header',
    'headerRenderer',
    'height',
    'hidden',
    'hideAnimation',
    'hideOtherMonthCells',
    'hideWhenEmpty',
    'html',
    'htmlCls',
    'id',
    'ignoreParentReadOnly',
    'insertBefore',
    'insertFirst',
    'itemCls',
    'items',
    'layout',
    'layoutStyle',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'margin',
    'maskDefaults',
    'masked',
    'maxDate',
    'maxDots',
    'maxHeight',
    'maxWidth',
    'minColumnWidth',
    'minDate',
    'minHeight',
    'minRowHeight',
    'minWidth',
    'monitorResize',
    'month',
    'multiSelect',
    'namedItems',
    'nonWorkingDays',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'readOnly',
    'record',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollable',
    'scrollAction',
    'selection',
    'showAnimation',
    'showEvents',
    'showTooltipWhenDisabled',
    'showWeekColumn',
    'showWeekNumber',
    'sixWeeks',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strictRecordMapping',
    'strips',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'tip',
    'title',
    'tools',
    'tooltip',
    'trapFocus',
    'ui',
    'weekRenderer',
    'weekStartDay',
    'weight',
    'width',
    'x',
    'y'
]);
BryntumCalendarDatePickerComponent.bryntumConfigsOnly = [
    'activeDate',
    'adopt',
    'align',
    'anchor',
    'ariaDescription',
    'ariaLabel',
    'autoUpdateRecord',
    'bbar',
    'bodyCls',
    'bubbleEvents',
    'callOnFunctions',
    'cellRenderer',
    'centered',
    'collapsed',
    'collapsible',
    'config',
    'constrainTo',
    'contentElementCls',
    'dayNameFormat',
    'defaultBindProperty',
    'defaultFocus',
    'defaults',
    'disabledDates',
    'disableOtherMonthCells',
    'disableWeekends',
    'dock',
    'draggable',
    'editMonth',
    'eventFilter',
    'eventRenderer',
    'eventStore',
    'floating',
    'focusDisabledDates',
    'footer',
    'getPrimaryResource',
    'header',
    'headerRenderer',
    'hideAnimation',
    'hideOtherMonthCells',
    'hideWhenEmpty',
    'htmlCls',
    'ignoreParentReadOnly',
    'itemCls',
    'lazyItems',
    'listeners',
    'localeClass',
    'localizable',
    'localizableProperties',
    'maskDefaults',
    'masked',
    'maxDate',
    'minColumnWidth',
    'minDate',
    'minRowHeight',
    'monitorResize',
    'month',
    'multiSelect',
    'namedItems',
    'nonWorkingDays',
    'owner',
    'positioned',
    'preventTooltipOnTouch',
    'relayStoreEvents',
    'ripple',
    'rootElement',
    'scrollAction',
    'showAnimation',
    'showTooltipWhenDisabled',
    'showWeekColumn',
    'showWeekNumber',
    'sixWeeks',
    'stateful',
    'statefulEvents',
    'stateId',
    'stateProvider',
    'strips',
    'tab',
    'tag',
    'tbar',
    'textAlign',
    'textContent',
    'tip',
    'trapFocus',
    'ui',
    'weekRenderer',
    'weekStartDay',
    'weight'
];
BryntumCalendarDatePickerComponent.bryntumProps = BryntumCalendarDatePickerComponent.bryntumFeatureNames.concat([
    'alignSelf',
    'anchorSize',
    'animateTimeShift',
    'appendTo',
    'cls',
    'content',
    'dataset',
    'date',
    'disabled',
    'eventCountTip',
    'extraData',
    'filterEventResources',
    'flex',
    'height',
    'hidden',
    'html',
    'id',
    'insertBefore',
    'insertFirst',
    'isSettingValues',
    'isValid',
    'items',
    'layout',
    'layoutStyle',
    'margin',
    'maxDots',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'readOnly',
    'record',
    'scrollable',
    'selection',
    'showEvents',
    'state',
    'strictRecordMapping',
    'title',
    'tools',
    'tooltip',
    'type',
    'values',
    'width',
    'x',
    'y'
]);
BryntumCalendarDatePickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumCalendarDatePickerComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
BryntumCalendarDatePickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.0", type: BryntumCalendarDatePickerComponent, selector: "bryntum-calendar-date-picker", inputs: { activeDate: "activeDate", adopt: "adopt", align: "align", anchor: "anchor", ariaDescription: "ariaDescription", ariaLabel: "ariaLabel", autoUpdateRecord: "autoUpdateRecord", bbar: "bbar", bodyCls: "bodyCls", bubbleEvents: "bubbleEvents", callOnFunctions: "callOnFunctions", cellRenderer: "cellRenderer", centered: "centered", collapsed: "collapsed", collapsible: "collapsible", config: "config", constrainTo: "constrainTo", contentElementCls: "contentElementCls", dayNameFormat: "dayNameFormat", defaultBindProperty: "defaultBindProperty", defaultFocus: "defaultFocus", defaults: "defaults", disabledDates: "disabledDates", disableOtherMonthCells: "disableOtherMonthCells", disableWeekends: "disableWeekends", dock: "dock", draggable: "draggable", editMonth: "editMonth", eventFilter: "eventFilter", eventRenderer: "eventRenderer", eventStore: "eventStore", floating: "floating", focusDisabledDates: "focusDisabledDates", footer: "footer", getPrimaryResource: "getPrimaryResource", header: "header", headerRenderer: "headerRenderer", hideAnimation: "hideAnimation", hideOtherMonthCells: "hideOtherMonthCells", hideWhenEmpty: "hideWhenEmpty", htmlCls: "htmlCls", ignoreParentReadOnly: "ignoreParentReadOnly", itemCls: "itemCls", lazyItems: "lazyItems", listeners: "listeners", localeClass: "localeClass", localizable: "localizable", localizableProperties: "localizableProperties", maskDefaults: "maskDefaults", masked: "masked", maxDate: "maxDate", minColumnWidth: "minColumnWidth", minDate: "minDate", minRowHeight: "minRowHeight", monitorResize: "monitorResize", month: "month", multiSelect: "multiSelect", namedItems: "namedItems", nonWorkingDays: "nonWorkingDays", owner: "owner", positioned: "positioned", preventTooltipOnTouch: "preventTooltipOnTouch", relayStoreEvents: "relayStoreEvents", ripple: "ripple", rootElement: "rootElement", scrollAction: "scrollAction", showAnimation: "showAnimation", showTooltipWhenDisabled: "showTooltipWhenDisabled", showWeekColumn: "showWeekColumn", showWeekNumber: "showWeekNumber", sixWeeks: "sixWeeks", stateful: "stateful", statefulEvents: "statefulEvents", stateId: "stateId", stateProvider: "stateProvider", strips: "strips", tab: "tab", tag: "tag", tbar: "tbar", textAlign: "textAlign", textContent: "textContent", tip: "tip", trapFocus: "trapFocus", ui: "ui", weekRenderer: "weekRenderer", weekStartDay: "weekStartDay", weight: "weight", alignSelf: "alignSelf", animateTimeShift: "animateTimeShift", appendTo: "appendTo", cls: "cls", content: "content", dataset: "dataset", date: "date", disabled: "disabled", eventCountTip: "eventCountTip", extraData: "extraData", filterEventResources: "filterEventResources", flex: "flex", height: "height", hidden: "hidden", html: "html", id: "id", insertBefore: "insertBefore", insertFirst: "insertFirst", items: "items", layout: "layout", layoutStyle: "layoutStyle", margin: "margin", maxDots: "maxDots", maxHeight: "maxHeight", maxWidth: "maxWidth", minHeight: "minHeight", minWidth: "minWidth", readOnly: "readOnly", record: "record", scrollable: "scrollable", selection: "selection", showEvents: "showEvents", strictRecordMapping: "strictRecordMapping", title: "title", tools: "tools", tooltip: "tooltip", width: "width", x: "x", y: "y", anchorSize: "anchorSize", isSettingValues: "isSettingValues", isValid: "isValid", state: "state", type: "type", values: "values" }, outputs: { onBeforeDestroy: "onBeforeDestroy", onBeforeHide: "onBeforeHide", onBeforeRefresh: "onBeforeRefresh", onBeforeSetRecord: "onBeforeSetRecord", onBeforeShow: "onBeforeShow", onCatchAll: "onCatchAll", onDateChange: "onDateChange", onDestroy: "onDestroy", onFocusIn: "onFocusIn", onFocusOut: "onFocusOut", onHide: "onHide", onPaint: "onPaint", onReadOnly: "onReadOnly", onRecompose: "onRecompose", onRefresh: "onRefresh", onResize: "onResize", onSelectionChange: "onSelectionChange", onShow: "onShow", onToolClick: "onToolClick" }, usesOnChanges: true, ngImport: i0, template: '', isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.0", ngImport: i0, type: BryntumCalendarDatePickerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'bryntum-calendar-date-picker',
                    template: ''
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { activeDate: [{
                type: Input
            }], adopt: [{
                type: Input
            }], align: [{
                type: Input
            }], anchor: [{
                type: Input
            }], ariaDescription: [{
                type: Input
            }], ariaLabel: [{
                type: Input
            }], autoUpdateRecord: [{
                type: Input
            }], bbar: [{
                type: Input
            }], bodyCls: [{
                type: Input
            }], bubbleEvents: [{
                type: Input
            }], callOnFunctions: [{
                type: Input
            }], cellRenderer: [{
                type: Input
            }], centered: [{
                type: Input
            }], collapsed: [{
                type: Input
            }], collapsible: [{
                type: Input
            }], config: [{
                type: Input
            }], constrainTo: [{
                type: Input
            }], contentElementCls: [{
                type: Input
            }], dayNameFormat: [{
                type: Input
            }], defaultBindProperty: [{
                type: Input
            }], defaultFocus: [{
                type: Input
            }], defaults: [{
                type: Input
            }], disabledDates: [{
                type: Input
            }], disableOtherMonthCells: [{
                type: Input
            }], disableWeekends: [{
                type: Input
            }], dock: [{
                type: Input
            }], draggable: [{
                type: Input
            }], editMonth: [{
                type: Input
            }], eventFilter: [{
                type: Input
            }], eventRenderer: [{
                type: Input
            }], eventStore: [{
                type: Input
            }], floating: [{
                type: Input
            }], focusDisabledDates: [{
                type: Input
            }], footer: [{
                type: Input
            }], getPrimaryResource: [{
                type: Input
            }], header: [{
                type: Input
            }], headerRenderer: [{
                type: Input
            }], hideAnimation: [{
                type: Input
            }], hideOtherMonthCells: [{
                type: Input
            }], hideWhenEmpty: [{
                type: Input
            }], htmlCls: [{
                type: Input
            }], ignoreParentReadOnly: [{
                type: Input
            }], itemCls: [{
                type: Input
            }], lazyItems: [{
                type: Input
            }], listeners: [{
                type: Input
            }], localeClass: [{
                type: Input
            }], localizable: [{
                type: Input
            }], localizableProperties: [{
                type: Input
            }], maskDefaults: [{
                type: Input
            }], masked: [{
                type: Input
            }], maxDate: [{
                type: Input
            }], minColumnWidth: [{
                type: Input
            }], minDate: [{
                type: Input
            }], minRowHeight: [{
                type: Input
            }], monitorResize: [{
                type: Input
            }], month: [{
                type: Input
            }], multiSelect: [{
                type: Input
            }], namedItems: [{
                type: Input
            }], nonWorkingDays: [{
                type: Input
            }], owner: [{
                type: Input
            }], positioned: [{
                type: Input
            }], preventTooltipOnTouch: [{
                type: Input
            }], relayStoreEvents: [{
                type: Input
            }], ripple: [{
                type: Input
            }], rootElement: [{
                type: Input
            }], scrollAction: [{
                type: Input
            }], showAnimation: [{
                type: Input
            }], showTooltipWhenDisabled: [{
                type: Input
            }], showWeekColumn: [{
                type: Input
            }], showWeekNumber: [{
                type: Input
            }], sixWeeks: [{
                type: Input
            }], stateful: [{
                type: Input
            }], statefulEvents: [{
                type: Input
            }], stateId: [{
                type: Input
            }], stateProvider: [{
                type: Input
            }], strips: [{
                type: Input
            }], tab: [{
                type: Input
            }], tag: [{
                type: Input
            }], tbar: [{
                type: Input
            }], textAlign: [{
                type: Input
            }], textContent: [{
                type: Input
            }], tip: [{
                type: Input
            }], trapFocus: [{
                type: Input
            }], ui: [{
                type: Input
            }], weekRenderer: [{
                type: Input
            }], weekStartDay: [{
                type: Input
            }], weight: [{
                type: Input
            }], alignSelf: [{
                type: Input
            }], animateTimeShift: [{
                type: Input
            }], appendTo: [{
                type: Input
            }], cls: [{
                type: Input
            }], content: [{
                type: Input
            }], dataset: [{
                type: Input
            }], date: [{
                type: Input
            }], disabled: [{
                type: Input
            }], eventCountTip: [{
                type: Input
            }], extraData: [{
                type: Input
            }], filterEventResources: [{
                type: Input
            }], flex: [{
                type: Input
            }], height: [{
                type: Input
            }], hidden: [{
                type: Input
            }], html: [{
                type: Input
            }], id: [{
                type: Input
            }], insertBefore: [{
                type: Input
            }], insertFirst: [{
                type: Input
            }], items: [{
                type: Input
            }], layout: [{
                type: Input
            }], layoutStyle: [{
                type: Input
            }], margin: [{
                type: Input
            }], maxDots: [{
                type: Input
            }], maxHeight: [{
                type: Input
            }], maxWidth: [{
                type: Input
            }], minHeight: [{
                type: Input
            }], minWidth: [{
                type: Input
            }], readOnly: [{
                type: Input
            }], record: [{
                type: Input
            }], scrollable: [{
                type: Input
            }], selection: [{
                type: Input
            }], showEvents: [{
                type: Input
            }], strictRecordMapping: [{
                type: Input
            }], title: [{
                type: Input
            }], tools: [{
                type: Input
            }], tooltip: [{
                type: Input
            }], width: [{
                type: Input
            }], x: [{
                type: Input
            }], y: [{
                type: Input
            }], anchorSize: [{
                type: Input
            }], isSettingValues: [{
                type: Input
            }], isValid: [{
                type: Input
            }], state: [{
                type: Input
            }], type: [{
                type: Input
            }], values: [{
                type: Input
            }], onBeforeDestroy: [{
                type: Output
            }], onBeforeHide: [{
                type: Output
            }], onBeforeRefresh: [{
                type: Output
            }], onBeforeSetRecord: [{
                type: Output
            }], onBeforeShow: [{
                type: Output
            }], onCatchAll: [{
                type: Output
            }], onDateChange: [{
                type: Output
            }], onDestroy: [{
                type: Output
            }], onFocusIn: [{
                type: Output
            }], onFocusOut: [{
                type: Output
            }], onHide: [{
                type: Output
            }], onPaint: [{
                type: Output
            }], onReadOnly: [{
                type: Output
            }], onRecompose: [{
                type: Output
            }], onRefresh: [{
                type: Output
            }], onResize: [{
                type: Output
            }], onSelectionChange: [{
                type: Output
            }], onShow: [{
                type: Output
            }], onToolClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,